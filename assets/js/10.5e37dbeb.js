(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(e,t,s){"use strict";s.r(t);var a=s(44),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"general"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[e._v("#")]),e._v(" General")]),e._v(" "),s("h2",{attrs:{id:"glossary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#glossary"}},[e._v("#")]),e._v(" Glossary")]),e._v(" "),s("ul",[s("li",[e._v("WarpURL Portal - Where you register and login to manage all your subscriptions & billing. "),s("a",{attrs:{href:"https://warpurl.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://warpurl.com/"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("Subscription Portal - An instance of a Subscription that is created in WarpURL Portal, "),s("a",{attrs:{href:"https://app.demo.warpurl.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://app.demo.warpurl.net/"),s("OutboundLink")],1),e._v("\nis an example of a Subscription.")])]),e._v(" "),s("p",[e._v("API calls are JSON based for both request and response. Both have "),s("code",[e._v("control")]),e._v(" and "),s("code",[e._v("data")]),e._v(" properties.")]),e._v(" "),s("h2",{attrs:{id:"request-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-structure"}},[e._v("#")]),e._v(" Request Structure")]),e._v(" "),s("p",[e._v("All requests follow the general JSON request structure:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"control"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <Request & ResponseCode dependant>\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("All model properties are snake case, logical fields are pascal case.\nExamples of logical fields when making requests are: "),s("code",[e._v("Limit")]),e._v(", "),s("code",[e._v("PageKey")]),e._v(" and "),s("code",[e._v("Sort")])]),e._v(" "),s("p",[e._v("The following "),s("code",[e._v("control")]),e._v(" properties can be specified on specific requests and will be indicated when available:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("control.Include")]),e._v(" Include other related entities with the current request to minimize back and forth or multiple lookups. This is usually an array.")])]),e._v(" "),s("h2",{attrs:{id:"response-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-structure"}},[e._v("#")]),e._v(" Response Structure")]),e._v(" "),s("h4",{attrs:{id:"http-status-codes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-status-codes"}},[e._v("#")]),e._v(" HTTP Status Codes")]),e._v(" "),s("p",[e._v("This structure is returned as the response of ALL API Calls. Only the Success API Call responses will be shown from\nhere on out, except if the specific error ResponseCode is of significant value.")]),e._v(" "),s("h4",{attrs:{id:"_200-success"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_200-success"}},[e._v("#")]),e._v(" 200 - SUCCESS")]),e._v(" "),s("p",[e._v("Indicates that the API endpoint was hit successfully, all auth passed.")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"control"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ResponseCode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"TraceID"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"11648023-1376-4da8-806e-11999c1c519f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eb511f1"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <Request & ResponseCode dependant>\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("ul",[s("li",[s("p",[s("code",[e._v("control")]),e._v(" Is a structure that will always be returned if the API was hit. It is the high level structure that can be used\nfor branching logic.")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("control.ResponseCode")]),e._v(" Indicates if the request executed successfully or not.")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("2000")]),e._v(" Successful execution")]),e._v(" "),s("li",[s("code",[e._v("3001")]),e._v(" Authorization "),s("strong",[e._v("error")])]),e._v(" "),s("li",[s("code",[e._v("5000")]),e._v(" Unknown server "),s("strong",[e._v("error")])]),e._v(" "),s("li",[s("code",[e._v("5001")]),e._v(" Known/Handled "),s("strong",[e._v("error")])]),e._v(" "),s("li",[s("code",[e._v("5002")]),e._v(" Validation "),s("strong",[e._v("error")])])]),e._v(" "),s("p",[e._v("All "),s("strong",[e._v("error")]),e._v(" codes will have more info about that error in the "),s("code",[e._v("control.data")]),e._v(" field.")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("control.TraceID")]),e._v(" Can be presented to support if ResponseCode 5000 is returned for further investigation.")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("control.Build")]),e._v(" Can be ignored, this is only used by the frontend.")])])]),e._v(" "),s("h4",{attrs:{id:"_401-unauthorized-expire"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_401-unauthorized-expire"}},[e._v("#")]),e._v(" 401 - UNAUTHORIZED/EXPIRE")]),e._v(" "),s("p",[e._v("If either the API Key or JWT ID Token are missing or invalid:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Unauthorized"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("The JWT ID Token has expired:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"The incoming token has expired"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h4",{attrs:{id:"_403-forbidden"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_403-forbidden"}},[e._v("#")]),e._v(" 403 - FORBIDDEN")]),e._v(" "),s("p",[e._v("The JWT ID Token is correct, but the API Key is wrong:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Forbidden"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h4",{attrs:{id:"_429-throttled"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_429-throttled"}},[e._v("#")]),e._v(" 429 - THROTTLED")]),e._v(" "),s("p",[e._v("Exceeding the set rate limit per second value")]),e._v(" "),s("p",[s("em",[e._v("For a full list see "),s("a",{attrs:{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS API Gateway response types"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[e._v("#")]),e._v(" Authentication")]),e._v(" "),s("p",[e._v("API calls are secured by two mechanisms.")]),e._v(" "),s("h3",{attrs:{id:"api-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-keys"}},[e._v("#")]),e._v(" API Keys")]),e._v(" "),s("p",[e._v("Each "),s("strong",[e._v("Subscription")]),e._v(" has its own API Key. This key is used to identify all requests for that Subscription.\nIt can be obtained in the WarpURL portal under Subscriptions by clicking on a specific Subscription.\nNote that it can not be rotated, as it is only used to separate and rate limit API traffic per Subscription.")]),e._v(" "),s("p",[e._v("Each request requires the API Key value in the header:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"x-api-key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <YOUR API KEY>\n")])])]),s("h3",{attrs:{id:"access-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-keys"}},[e._v("#")]),e._v(" Access Keys")]),e._v(" "),s("p",[e._v("Access keys identify a "),s("strong",[e._v("specific user")]),e._v(". They can be created in the Subscription Portal under a specific user Profile.\nThese can be rotated, each user can have two Access Keys(active or inactive) at a time. The key password can not be retrieved\nafter creation. Instead, create a new Access Key and make the old Key inactive.")]),e._v(" "),s("p",[e._v("The Access Keys consists of a "),s("strong",[e._v("Key ID")]),e._v(" and a "),s("strong",[e._v("Key Password")]),e._v(" ,these must be exchanged for temporary JWT ID & Refresh Tokens by calling\n"),s("em",[s("RouterLink",{attrs:{to:"/api/access_key.html#get-token"}},[e._v("Get Token")])],1),e._v(". These are AWS Cognito Tokens but behave exactly the same as any other JWT Tokens,\nthus they expire after a given time. The JWT ID Token can be refreshed by calling "),s("em",[s("RouterLink",{attrs:{to:"/api/access_key.html#refresh-token"}},[e._v("Refresh Token")])],1),e._v(".")]),e._v(" "),s("p",[e._v("Each request requires the JWT ID Token in the header:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Authorization"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <JWT ID Token>\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);